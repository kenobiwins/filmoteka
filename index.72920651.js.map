{"mappings":"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","sources":["src/index.js","src/js/gallery.js","src/js/refs/refs.js","src/js/render/renderCards.js","src/js/helpers/pagination.js"],"sourcesContent":["import './js/API/API';\nimport './js/gallery';\n","import {\n  fetchTrendingMovies,\n  fetchGenres,\n  fetchMovies,\n  fetchInfoMovieById,\n} from './API/API';\nimport { refs } from './refs/refs';\nimport {\n  renderCards,\n  insertMarkup,\n  IMAGES_URL,\n  ALT_IMAGE_URL,\n} from './render/renderCards';\nimport { pagination, paginationSelect } from './helpers/pagination';\n\nlet PAGE = 1;\n\nwindow.addEventListener('DOMContentLoaded', onLoad);\nrefs.pagination.addEventListener('click', paginationSelect);\nrefs.form.addEventListener('submit', onSearch);\n\nasync function onLoad() {\n  const response = await fetchTrendingMovies(PAGE);\n\n  pagination(response.data.page, response.data.total_pages);\n  insertMarkup(refs.mainContainer, await renderCards(response.data));\n\n  refs.mainContainer.addEventListener('click', showInfo);\n}\n\nasync function onSearch(e) {\n  e.preventDefault();\n\n  const {\n    target: { searchQuery },\n    currentTarget,\n  } = e;\n\n  const response = await fetchMovies(searchQuery.value);\n\n  if (\n    response.data.results === 0 ||\n    !response.data.results ||\n    response.data.results.length === 0\n  ) {\n    searchQuery.value = '';\n    refs.formAlert.classList.remove('visually-hidden');\n    setTimeout(() => {\n      refs.formAlert.classList.add('visually-hidden');\n    }, 3000);\n    return;\n  }\n\n  pagination(response.data.page, response.data.total_pages);\n  insertMarkup(refs.mainContainer, await renderCards(response.data));\n}\n\nasync function showInfo(e) {\n  e.preventDefault();\n\n  const { target, currentTarget } = e;\n\n  if (target === currentTarget) return;\n\n  const cardId = target.closest('li').getAttribute('data-id');\n\n  const el = {\n    img: refs.modalInfo.querySelector('.modal__img-wrapper img'),\n    originalTitle: refs.modalInfo.querySelector('.modal__title'),\n    ratio: refs.modalInfo.querySelector(\n      '.modal__ratio-info-list [data-value=\"ratio\"]'\n    ),\n    popularity: refs.modalInfo.querySelector(\n      '.modal__ratio-info-list [data-value=\"popularity\"]'\n    ),\n    refTitle: refs.modalInfo.querySelector(\n      '.modal__ratio-info-list [data-value=\"original-title\"]'\n    ),\n    genres: refs.modalInfo.querySelector(\n      '.modal__ratio-info-list [data-value=\"genre\"]'\n    ),\n    infoFilm: document.querySelector('.modal__full-info'),\n  };\n\n  if (!cardId) return;\n\n  const response = await fetchInfoMovieById(cardId);\n  if (response === undefined || response === null) {\n    return;\n  }\n\n  const {\n    title,\n    name,\n    vote_average,\n    vote_count,\n    popularity,\n    original_title,\n    original_name,\n    overview,\n    genres,\n    poster_path,\n  } = response.data;\n\n  el.img.src = IMAGES_URL + poster_path || ALT_IMAGE_URL;\n  el.originalTitle.textContent = title || name;\n  el.ratio.textContent = `${\n    vote_average ? vote_average.toFixed(1) : \"haven't ratio\"\n  }/${vote_count || ''}`;\n  el.popularity.textContent = popularity ? popularity.toFixed(1) : '';\n  el.refTitle.textContent = original_title || original_name;\n  el.genres.textContent = genres.map(el => el['name']).join(', ');\n  el.infoFilm.textContent = overview || \"haven't overview\";\n\n  refs.buttonCloseModal.addEventListener('click', toggleModal);\n  refs.backdrop.classList.remove('is-hidden');\n}\n\nfunction toggleModal(e) {\n  refs.backdrop.classList.add('is-hidden');\n  refs.buttonCloseModal.removeEventListener('click', toggleModal);\n}\n","const refs = {\n  mainContainer: document.querySelector('.movie-gallery'),\n  movieCard: document.getElementsByClassName('movie-card'),\n  pagination: document.querySelector('.pagination'),\n  form: document.querySelector('.form'),\n  formAlert: document.querySelector('.form__alert'),\n  modalInfo: document.querySelector('.modal'),\n  backdrop: document.querySelector('.backdrop'),\n  buttonCloseModal: document.querySelector('.button-close'),\n};\n\nexport { refs };\n","import { fetchGenres } from '../API/API';\n\nconst ALT_IMAGE_URL =\n  'https://www.csaff.org/wp-content/uploads/csaff-no-poster.jpg';\nconst IMAGES_URL = 'https://image.tmdb.org/t/p/w500/';\nlet imageUrl = '';\n\nasync function renderCards(data) {\n  try {\n    const response = await fetchGenres();\n    if (response.status !== 200) throw new Error(response.status);\n    if (response.data === undefined) {\n      throw new Error(response.data, 'undefined');\n    }\n\n    return data.results.reduce(\n      (\n        acc,\n        {\n          poster_path,\n          title,\n          genre_ids = \"haven't genres\",\n          vote_average,\n          name,\n          id,\n        }\n      ) => {\n        const genres = response.data.genres.reduce((acc, el) => {\n          if (genre_ids.includes(el['id'])) {\n            acc.push(el['name']);\n          }\n          return acc;\n        }, []);\n\n        if (\n          typeof poster_path === 'undefined' ||\n          typeof poster_path === 'object'\n        ) {\n          imageUrl = ALT_IMAGE_URL;\n        } else {\n          imageUrl = IMAGES_URL + poster_path;\n        }\n        acc += `<li class=\"movie-card\"  data-id='${id}'>\n  <img src='${imageUrl}' loading='lazy'/>\n  <h3 class=\"movie-card__name\">${title || name}</h3>\n  <p class=\"movie-card__genres\">\n    ${\n      genres.length === 0 ? \"haven't genre\" : genres.join(', ')\n    } <span class=\"movie-card__ratio\">${\n          vote_average ? vote_average.toFixed(1) : \"haven't ratio\"\n        }</span>\n  </p>\n</li>`;\n        return acc;\n      },\n      ''\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction insertMarkup(refOnContainer, markup) {\n  return (refOnContainer.innerHTML = markup);\n}\n\nexport { renderCards, insertMarkup, imageUrl, ALT_IMAGE_URL, IMAGES_URL };\n","import { refs } from '../refs/refs';\nimport { fetchTrendingMovies } from '../API/API';\nimport { renderCards, insertMarkup } from '../render/renderCards';\n\nfunction pagination(page, pages) {\n  let markup = '';\n  PAGE = page;\n  const beforeTwoPage = page - 2;\n  const beforeOnePage = page - 1;\n  const afterOnePage = page + 1;\n  const afterTwoPage = page + 2;\n  // &#129144;<\n  // &#129146;>\n  if (page > 1) {\n    markup += `<li data-action='prev'>&#129144;</li>`;\n    markup += `<li>1</li>`;\n  }\n  if (page > 4) {\n    markup += `<li>...</li>`;\n  }\n  if (page > 3) {\n    markup += `<li>${beforeTwoPage}</li>`;\n  }\n  if (page > 2) {\n    markup += `<li>${beforeOnePage}</li>`;\n  }\n  markup += `<li class='currentPage'>${PAGE}</li>`;\n  if (pages - 1 > PAGE) {\n    markup += `<li>${afterOnePage}</li>`;\n  }\n  if (pages - 2 > PAGE) {\n    markup += `<li>${afterTwoPage}</li>`;\n  }\n  if (pages - 3 > PAGE) {\n    markup += `<li>...</li>`;\n  }\n  if (pages > PAGE) {\n    markup += `<li>${pages}</li>`;\n    markup += `<li data-action='next'>&#129146;</li>`;\n  }\n  refs.pagination.innerHTML = markup;\n}\n\nasync function paginationSelect(e) {\n  const { target, currentTarget } = e;\n  if (target === currentTarget || target === '...') {\n    return;\n  }\n  if (target.dataset.action === 'next') {\n    PAGE += 1;\n    const response = await fetchTrendingMovies(PAGE);\n    insertMarkup(refs.mainContainer, await renderCards(response.data));\n    pagination(response.data.page, response.data.total_pages);\n    return;\n  }\n  if (target.dataset.action === 'prev') {\n    PAGE -= 1;\n    const response = await fetchTrendingMovies(PAGE);\n    insertMarkup(refs.mainContainer, await renderCards(response.data));\n    pagination(response.data.page, response.data.total_pages);\n    return;\n  }\n  PAGE = Number(target.textContent);\n  const response = await fetchTrendingMovies(PAGE);\n  insertMarkup(refs.mainContainer, await renderCards(response.data));\n  pagination(response.data.page, response.data.total_pages);\n}\n\nexport { pagination, paginationSelect };\n"],"names":["parcelRequire","$ed1K5","$2b5a7c7de2dd1799$export$21666b427502ea6d","mainContainer","document","querySelector","movieCard","getElementsByClassName","pagination","form","formAlert","modalInfo","backdrop","buttonCloseModal","$afe2bf2502d8872d$export$7a48f0b413eb10a2","async","$afe2bf2502d8872d$export$e483d52d8d6686e1","data","response","fetchGenres","status","Error","undefined","results","reduce","acc1","poster_path","title","genre_ids","vote_average","name","id","genres","acc","el","includes","push","length","join","toFixed","error","console","log","$afe2bf2502d8872d$export$9393612adafb5496","refOnContainer","markup","innerHTML","$67822bd4ad7675d8$export$22fa394f3ba39578","page","pages","PAGE","$7c59f4ec4043ce00$var$showInfo","e","preventDefault","target","currentTarget","cardId","closest","getAttribute","el1","img","originalTitle","ratio","popularity","refTitle","infoFilm","fetchInfoMovieById","vote_count","original_title","original_name","overview","src","textContent","map","addEventListener","$7c59f4ec4043ce00$var$toggleModal","classList","remove","add","removeEventListener","window","fetchTrendingMovies","total_pages","dataset","action","Number","searchQuery","fetchMovies","value","setTimeout"],"version":3,"file":"index.72920651.js.map"}